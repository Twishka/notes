{"version":3,"sources":["assets/fonts/OpenSans-Light.ttf","components/Items.js","components/Comments.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","light","require","Items","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addNote","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","state","newNoteName","length","name","comments","setState","stop","deleteNote","index","pickNote","_this2","react_default","createElement","ItemsBase","className","value","onChange","event","target","placeholder","onClick","notes","map","note","Fragment","key","pickedNote","Component","styled","div","_templateObject","Comments","handlePress","ctrlKey","metaKey","addComment","newComment","CommentsBase","comment","rows","onKeyPress","_ref","abrupt","_x","apply","arguments","Comments_templateObject","App","newNote","objectSpread","concat","toConsumableArray","splice","updatedNote","newNotes","saveChanges","localStorage","setItem","JSON","stringify","parse","getItem","prevProps","prevState","snapshot","AppBase","components_Items","components_Comments","App_templateObject","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a760d4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/OpenSans-Light.1bf71be1.ttf\";","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nconst light = require('../assets/fonts/OpenSans-Light.ttf')\n\nclass Items extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnewNoteName: '',\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<ItemsBase>\n\t\t\t\t<div>\n\t\t\t\t\t<div className={\"itemsTitle\"}>\n\t\t\t\t\t\tItems\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={\"row\"}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={this.state.newNoteName}\n\t\t\t\t\t\t\tclassName={\"itemsInput\"}\n\t\t\t\t\t\t\tonChange={(event) => this.setState({newNoteName: event.target.value})}\n\t\t\t\t\t\t\tplaceholder=\"Type name here...\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => this.addNote()}\n\t\t\t\t\t\t\tclassName={\"addButton\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd new\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"notesContainer\"}>\n\t\t\t\t\t{this.props.notes.map((note, index) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => this.pickNote(index)}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName={this.props.pickedNote === index ? \"note pickedNote\" : \"notPickedNote note\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className={\"noteInfo\"}>\n\t\t\t\t\t\t\t\t\t<div className={\"name\"}>{note.name}</div>\n\t\t\t\t\t\t\t\t\t<div className={\"commentsNumber\"}>{note.comments.length}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tonClick={() => this.deleteNote(index)}\n\t\t\t\t\t\t\t\t\tclassName={\"deleteButton\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"divider\"}/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</ItemsBase>\n\t\t);\n\t}\n\t\n\taddNote = async () => {\n\t\tif (this.state.newNoteName.length > 0) {\n\t\t\tthis.props.addNote({name: this.state.newNoteName, comments: []})\n\t\t\tthis.setState({newNoteName: ''})\n\t\t}\n\t}\n\t\n\tdeleteNote = index => {\n\t\tthis.props.deleteNote(index)\n\t}\n\t\n\tpickNote = index => {\n\t\tthis.props.pickNote(index)\n\t}\n}\n\nconst ItemsBase = styled.div`\n\theight: 0%;\n\tmin-height: 523px;\n\tmargin-left: 32px;\n\tmargin-top: 34px;\n\tpadding-bottom: 8px;\n\tborder: 1px solid #f2f2f2;\n\tbackground-color: #ffffff;\n\tbox-shadow: 0.5px 0.5px 3px #ccc;\n\twidth: 479px;\n\t.itemsTitle {\n\t\tcolor: #565a69;\n\t\tpadding-bottom: 16px;\n\t\tfont-family: ${light};\n\t\tfont-size: 36px;\n\t\tfont-weight: 300;\n\t\tmargin-top: 8px;\n\t\tmargin-right: 14px;\n\t\tmargin-left: 25px;\n\t}\n\t.row {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\t.itemsInput {\n\t\twidth: 290px;\n\t\tmargin-right: 11px;\n\t\tmargin-left: 25px;\n\t\tpadding-top: 7px;\n\t\tpadding-left: 10px;\n\t\tpadding-bottom: 8px;\n\t\tpadding-right: 10px;\n\t\tborder: 1px solid #cccccc;\n\t\tborder-radius: 4px;\n\t\tfont-family: \"Open Sans\";\n\t\tfont-size: 16px;\n\t}\n\t.addButton {\n\t\tdisplay: flex;\n\t\twidth: 133px;\n\t\tpadding-top: 7px;\n\t\tpadding-bottom: 8px;\n\t\tmargin-right: 14px;\n\t\tbackground-color: #27ccc0;\n\t\tfont-family: \"Open Sans\";\n\t\tfont-weight: 600;\n\t\tcolor: #ffffff;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tborder-radius: 4px;\n\t\tfont-family: \"Open Sans\";\n\t\tfont-size: 16px;\n\t}\n\t.itemsInput::placeholder {\n\t\tcolor: #b3b3b3;\n\t}\n\t.notesContainer {\n\t\tmargin-top: 9px;\n\t\twidth: 100%;\n\t}\n\t.pickedNote {\n\t\tmargin-left: -3px;\n\t\tborder-left: 5px solid #ff2f5a;\n\t\tpadding-left: 29px;\n\t};\n\t.notPickedNote {\n\t\tpadding-left: 31px;\n\t}\n\t.note {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding-top: 16px;\n\t\tpadding-bottom: 16px;\n\t\tjustify-content: space-between;\n\t\tflex-direction: row;\n\t\tposition: relative;\n  \tz-index: 1;\n\t};\n\t.note:before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 6%;\n\t\tbottom: 0;\n\t\theight: 1px;\n\t\twidth: 90%;\n\t\tborder-bottom: 1px solid #f2f2f2;\n\t}\n\t.noteInfo {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\t.deleteButton {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmargin-right: 19px;\n\t\twidth: 97px;\n\t\theight: 34px;\n\t\tborder: 1px solid #ff3159;\n\t\tborder-radius: 4px;\n\t\tfont-family: ${light};\n\t\tcolor: #ff3159;\n\t}\n\t.name {\n\t\tcolor: #2b2f3e;\n\t\tfont-family: \"Open Sans\";\n\t\tfont-size: 16px;\n\t\tfont-weight: 600;\n\t\ttext-overflow: ellipsis;\n\t\tmax-width: 280px;\n\t\toverflow: hidden;\n\t};\n\t.commentsNumber {\n\t\tdisplay : flex;\n\t\talign-items : center;\n\t\theight: 22px;\n\t\tbackground-color: #27ccc0;\n\t\tborder-radius: 11px;\n\t\tmargin-left: 8px;\n\t\tpadding-top: auto;\n\t\tpadding-bottom: auto;\n\t\tpadding-left: 8px;\n\t\tpadding-right: 8px;\n\t\tcolor: #ffffff;\n\t\tfont-family: \"Open Sans\";\n\t\tfont-size: 13px;\n\t\tfont-weight: bold;\n\t};\n`\n\nexport default Items\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst light = require('../assets/fonts/OpenSans-Light.ttf')\n\nclass Comments extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnewComment: '',\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<CommentsBase>\n\t\t\t\t<div className={\"commentsTitle\"}>Comments #{this.props.pickedNote + 1}</div>\n\t\t\t\t{this.props.comments.map((comment, index) => (\n\t\t\t\t\t<div key={index} className={\"row\"}>\n\t\t\t\t\t\t<div className={!!(index % 2) ? \"picture evenPicture\" : \"picture oddPicture\"}/>\n\t\t\t\t\t\t<div className={\"commentText\"}>{comment}</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<div className={\"addCommentRow\"}>\n\t\t\t\t\t<div className={\"picture commentPicture\"}/>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\t\tclassName={\"commentInput\"}\n\t\t\t\t\t\t\tonKeyPress={event => this.handlePress(event)}\n\t\t\t\t\t\t\tonChange={async event => this.setState({ newComment: event.target.value })}\n\t\t\t\t\t\t\tvalue={this.state.newComment}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t</CommentsBase>\n\t\t);\n\t}\n\t\n\thandlePress = event => {\n\t\tif(event.key==='Enter' && (event.ctrlKey || event.metaKey)) {\n\t\t\tthis.props.addComment(this.state.newComment)\n\t\t\tthis.setState({ newComment: '' })\n\t\t}\n\t}\n}\n\nconst CommentsBase = styled.div`\n\theight: 0%;\n\twidth: 444px;\n\tmargin-left: 20px;\n\tmargin-top: 34px;\n\tpadding-top: 8px;\n\tpadding-left: 18px;\n\tpadding-right: 19px;\n\tpadding-bottom: 14px;\n\tborder: 1px solid #f2f2f2;\n\tbackground-color: #ffffff;\n\tbox-shadow: 0.5px 0.5px 3px #ccc;\n\t.commentsTitle {\n\t\tcolor: #565a69;\n\t\tpadding-bottom: 16px;\n\t\tfont-family: ${light};\n\t\tfont-size: 36px;\n\t\tfont-weight: 300;\n\t}\n\t.row {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tpadding-bottom: 20px;\n\t\tpadding-top: 14px;\n\t\tposition: relative;\n  \tz-index: 1;\n\t}\n\t.row:before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\theight: 1px;\n\t\twidth: 95%;\n\t\tborder-bottom: 1px solid #f2f2f2;\n\t}\n\t.addCommentRow {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tpadding-top: 14px;\n\t}\n\t.picture {\n\t\twidth: 52px;\n\t\theight: 52px;\n\t\tmargin-right: 14px;\n\t}\n\t.oddPicture {\n\t\tbackground-color: #ff8a00;\n\t}\n\t.evenPicture {\n\t\tbackground-color: #47568c;\n\t}\n\t.commentPicture {\n\t\tbackground-color: #e6e6e6;\n\t}\n\t.commentText {\n\t\tcolor: #666666;\n\t\tfont-family: \"Open Sans\";\n\t\tfont-size: 12px;\n\t\twidth: 341px;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\t.commentInput {\n\t\twidth: 341px;\n\t\tword-break: break-word;\n\t\tborder: 1px solid #cccccc;\n\t\tfont-family: \"Open Sans\";\n\t\tfont-size: 12px;\n\t\tcolor: #666666;\n\t}\n`\n\nexport default Comments\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Items from './components/Items';\nimport Comments from './components/Comments';\n\nconst light = require('./assets/fonts/OpenSans-Light.ttf')\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnotes: JSON.parse(localStorage.getItem('notes')) || [],\n\t\t\tpickedNote: 0,\n\t\t}\n\t}\n\t\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tthis.saveChanges()\n\t}\n\n\trender() {\n    return (\n      <AppBase>\n\t\t\t\t<div className=\"leftBar\">\n\t\t\t\t\t<div className=\"appTitle\">DAIRY APP</div>\n\t\t\t\t\t<div className=\"subTitle\">Comment with no sense</div>\n\t\t\t\t</div>\n\t\t\t\t<Items\n\t\t\t\t\tnotes={this.state.notes}\n\t\t\t\t\tpickedNote={this.state.pickedNote}\n\t\t\t\t\tdeleteNote={index => this.deleteNote(index)}\n\t\t\t\t\taddNote={newNote => this.addNote(newNote)}\n\t\t\t\t\tpickNote={pickedNote => this.setState({pickedNote})}\n\t\t\t\t/>\n\t\t\t\t<Comments\n\t\t\t\t\tcomments={this.state.notes[this.state.pickedNote] ? this.state.notes[this.state.pickedNote].comments : []}\n\t\t\t\t\tpickedNote={this.state.pickedNote}\n\t\t\t\t\taddComment={comment => this.addComment(comment)}\n\t\t\t\t/>\n\t\t\t</AppBase>\n    );\n  }\n  \n  addNote = newNote => {\n\t\tthis.setState({...this.state, notes: [...this.state.notes, newNote]})\n\t}\n\t\n  deleteNote = index => {\n\t\tif (index < this.state.pickedNote) {\n\t\t\tthis.setState({...this.state, pickedNote: this.state.pickedNote - 1})\n\t\t} else if (index === this.state.pickedNote) {\n\t\t\tthis.setState({...this.state, pickedNote: 0})\n\t\t}\n\t\tlet notes = this.state.notes\n\t\tnotes.splice(index, 1)\n\t\tthis.setState({...this.state, notes})\n\t}\n\t\n\taddComment = comment => {\n\t\tlet updatedNote = this.state.notes[this.state.pickedNote]\n\t\tconst comments = [...updatedNote.comments, comment]\n\t\tupdatedNote = {...updatedNote, comments}\n\t\tconst newNotes = this.state.notes\n\t\tnewNotes.splice(this.state.pickedNote, 1, updatedNote)\n\t\tthis.setState({...this.state, notes: newNotes})\n\t}\n  \n\tsaveChanges = () => {\n\t\tlocalStorage.setItem('notes', JSON.stringify(this.state.notes))\n\t}\n}\n\nconst AppBase = styled.div`\n  display: flex;\n\tflex-direction: row;\n\tbackground-color: #f9f9f9;\n\t.leftBar {\n\t\tpadding-left: 27px;\n\t\tpadding-right: 40px;\n\t\tpadding-top: 16px;\n\t\twidth: 271px;\n\t\tbackground-color: #2b2f3e;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmin-height: 100vh;\n\t};\n\t.appTitle {\n\t\ttext-transform: uppercase;\n\t\tcolor: #ffffff;\n\t\tfont-family: ${light};\n\t\tfont-weight: 200;\n\t\tfont-size: 36px;\n\t};\n\t.subTitle {\n\t\tcolor: #808080;\n\t\tfont-family: \"Open Sans\";\n\t\tfont-size: 18px;\n\t};\n`\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}